@mixin clearfix {
    &::before,
    &::after {
        display: table;
        content: ' ';
    }
    &::after {
        clear: both;
    }
}

@mixin user-select-none {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
}

@mixin appearance-none {
    -webkit-appearance: none;
       -moz-appearance: none;
}

@mixin ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin icon($name) {
    font-family: Icons;
    @extend .i-#{$name}::before;
}

@mixin make-columns-globals($columns-count, $breakpoints) {
    $selectors: "";
    @each $breakpoint-name in map-keys($breakpoints) {
        @for $i from 1 through $columns-count {
            @if $selectors != "" {
                $selectors: "#{$selectors}, .col-#{$breakpoint-name}-#{$i}-#{$columns-count}";
                $gcd: gcd($i, $columns-count);
                @if $gcd > 1 {
                    $f: $i / $gcd;
                    $g: $columns-count / $gcd;
                    $selectors: "#{$selectors}, .col-#{$breakpoint-name}-#{$f}-#{$g}";
                }
            } @else {
                $selectors: ".col-#{$breakpoint-name}-#{$i}-#{$columns-count}";
            }
        }
    }
    #{$selectors} {
        padding: 0 $columns-gutter / 2;
    }
}

@mixin make-breakpoint-columns($columns-count, $breakpoint-name) {
    $all-selectors: "";
    @for $i from 1 through $columns-count {
        $selectors: ".col-#{$breakpoint-name}-#{$i}-#{$columns-count}";
        $gcd: gcd($i, $columns-count);
        @if $gcd > 1 {
            $f: $i / $gcd;
            $g: $columns-count / $gcd;
            $selectors: "#{$selectors}, .col-#{$breakpoint-name}-#{$f}-#{$g}";
        }
        @if $all-selectors != "" {
            $all-selectors: "#{$all-selectors}, #{$selectors}";
        } @else {
            $all-selectors: "#{$selectors}";
        }
        #{$selectors}{
            width: percentage($i / $columns-count);
        }
    }
    #{$all-selectors} {
        float: left;
    }
}

@mixin make-breakpoint-columns-offsets($columns-count, $breakpoint-name) {
    @for $i from 1 to $columns-count {
        $selectors: ".col-#{$breakpoint-name}-o-#{$i}-#{$columns-count}";
        $gcd: gcd($i, $columns-count);
        @if $gcd > 1 {
            $f: $i / $gcd;
            $g: $columns-count / $gcd;
            $selectors: "#{$selectors}, .col-#{$breakpoint-name}-o-#{$f}-#{$g}";
        }
        #{$selectors}{
            margin-left: percentage($i / $columns-count);
        }
    }
}

@function gcd($a, $b) {
    @if $b == 0 {
        @return $a;
    } @else {
        @return gcd($b, $a % $b);
    }
}
